{"ast":null,"code":"var _jsxFileName = \"D:\\\\abc\\\\github-card-app-react-demo\\\\src\\\\Form.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n// Form component\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = async event => {\n      event.preventDefault();\n\n      // fetch data using the axios library\n      const submit = this.props;\n      const api_endpoint = `https://api.github.com/users/${this.state.userName}`;\n      await axios.get(api_endpoint).then(function (response) {\n        submit.addProfile(response.data);\n      }).catch(function (err) {\n        if (err.message === 'Request failed with status code 404') {\n          submit.addMessage('GitHub account/username not found.');\n        } else {\n          submit.addMessage(err.message);\n        }\n      });\n\n      //reset form input string\n      this.setState({\n        userName: ''\n      });\n    };\n    this.state = {\n      userName: ''\n    };\n  }\n\n  //event handler function for form submission\n\n  // render\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.userName,\n      onChange: event => this.setState({\n        userName: event.target.value\n      }),\n      placeholder: \"GitHub username (e.g. Twitter)\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-dark\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"Add Card\"))));\n  }\n}\nexport default Form;","map":{"version":3,"names":["React","Component","axios","Form","constructor","props","handleSubmit","event","preventDefault","submit","api_endpoint","state","userName","get","then","response","addProfile","data","catch","err","message","addMessage","setState","render","target","value"],"sources":["D:/abc/github-card-app-react-demo/src/Form.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Form component\r\nclass Form extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      userName: ''\r\n    }\r\n  }\r\n\r\n  //event handler function for form submission\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    // fetch data using the axios library\r\n    const submit = this.props;\r\n    const api_endpoint = `https://api.github.com/users/${this.state.userName}`;\r\n    await axios.get(api_endpoint).then(function (response) {\r\n                  submit.addProfile(response.data);\r\n                }).catch(function (err) {\r\n                  if(err.message === 'Request failed with status code 404'){\r\n                    submit.addMessage('GitHub account/username not found.');\r\n                  } else {\r\n                    submit.addMessage(err.message);  \r\n                  }            \r\n                });\r\n    \r\n    //reset form input string\r\n    this.setState({userName: ''});\r\n  };\r\n  \r\n  // render\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <input \r\n            type=\"text\" \r\n            className=\"form-control\"\r\n            value={this.state.userName}\r\n            onChange={event => this.setState({userName: event.target.value})}\r\n            placeholder=\"GitHub username (e.g. Twitter)\"\r\n            required\r\n          /> \r\n          <div className=\"input-group-append\">\r\n            <button className=\"btn btn-dark\" type=\"submit\">Add Card</button>\r\n          </div>        \r\n        </div>\r\n      </form>\r\n    );\r\n  } \r\n}\r\n\r\nexport default Form;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,IAAI,SAASF,SAAS,CAAC;EAC3BG,WAAW,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;IAAC,KAOfC,YAAY,GAAG,MAAOC,KAAK,IAAK;MAC9BA,KAAK,CAACC,cAAc,EAAE;;MAEtB;MACA,MAAMC,MAAM,GAAG,IAAI,CAACJ,KAAK;MACzB,MAAMK,YAAY,GAAI,gCAA+B,IAAI,CAACC,KAAK,CAACC,QAAS,EAAC;MAC1E,MAAMV,KAAK,CAACW,GAAG,CAACH,YAAY,CAAC,CAACI,IAAI,CAAC,UAAUC,QAAQ,EAAE;QACzCN,MAAM,CAACO,UAAU,CAACD,QAAQ,CAACE,IAAI,CAAC;MAClC,CAAC,CAAC,CAACC,KAAK,CAAC,UAAUC,GAAG,EAAE;QACtB,IAAGA,GAAG,CAACC,OAAO,KAAK,qCAAqC,EAAC;UACvDX,MAAM,CAACY,UAAU,CAAC,oCAAoC,CAAC;QACzD,CAAC,MAAM;UACLZ,MAAM,CAACY,UAAU,CAACF,GAAG,CAACC,OAAO,CAAC;QAChC;MACF,CAAC,CAAC;;MAEd;MACA,IAAI,CAACE,QAAQ,CAAC;QAACV,QAAQ,EAAE;MAAE,CAAC,CAAC;IAC/B,CAAC;IAxBC,IAAI,CAACD,KAAK,GAAG;MACXC,QAAQ,EAAE;IACZ,CAAC;EACH;;EAEA;;EAqBA;EACAW,MAAM,GAAG;IACP,oBACE;MAAM,QAAQ,EAAE,IAAI,CAACjB,YAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAChC;MAAK,SAAS,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC1B;MACE,IAAI,EAAC,MAAM;MACX,SAAS,EAAC,cAAc;MACxB,KAAK,EAAE,IAAI,CAACK,KAAK,CAACC,QAAS;MAC3B,QAAQ,EAAEL,KAAK,IAAI,IAAI,CAACe,QAAQ,CAAC;QAACV,QAAQ,EAAEL,KAAK,CAACiB,MAAM,CAACC;MAAK,CAAC,CAAE;MACjE,WAAW,EAAC,gCAAgC;MAC5C,QAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACR,eACF;MAAK,SAAS,EAAC,oBAAoB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACjC;MAAQ,SAAS,EAAC,cAAc;MAAC,IAAI,EAAC,QAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,cAAkB,CAC5D,CACF,CACD;EAEX;AACF;AAEA,eAAetB,IAAI"},"metadata":{},"sourceType":"module"}